{
    "swagger": "2.0",
    "info": {
        "description": "Docs for LinkVault API",
        "title": "LinkVault API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/",
    "paths": {
        "/auth": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in to user account",
                "parameters": [
                    {
                        "description": "Login params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AuthLoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-string"
                        }
                    }
                }
            }
        },
        "/folders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "folder"
                ],
                "summary": "Get many folders belongs to user",
                "parameters": [
                    {
                        "type": "string",
                        "default": "updatedAt_DESC",
                        "description": "Order by title, created date, or modified date",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit every page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page count",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Folder(s) found",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_FolderEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "folder"
                ],
                "summary": "Create a folder",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateFolderDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created a folder",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_FolderEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            }
        },
        "/folders/{folderId}/links": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Get many link belongs to a user inside a folder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder ID",
                        "name": "folderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search matching title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search matching excerpt",
                        "name": "excerpt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "updatedAt_DESC",
                        "description": "Order by title, created date, or modified date",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit every page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page count",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.BaseResponse-entities_LinkEntity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Create link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder ID",
                        "name": "folderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateLinkDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created a link",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_LinkEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            }
        },
        "/links": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Get many link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search matching title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search matching excerpt",
                        "name": "excerpt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "updatedAt_DESC",
                        "description": "Order by title, created date, or modified date",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit every page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page count",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/utils.BaseResponse-entities_LinkEntity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            }
        },
        "/links/{linkId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Get one link by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Link ID",
                        "name": "linkId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated a link",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_LinkEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Delete one link by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Link ID",
                        "name": "linkId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted a link",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Failed to delete a link",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "link"
                ],
                "summary": "Update one link by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Link ID",
                        "name": "linkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateLinkDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated a link",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_LinkEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-any"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get many users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-array_entities_UserEntity"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "create user param",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_UserEntity"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get one user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_UserEntity"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete one user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_UserEntity"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update one user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create user param",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.BaseResponse-entities_UserEntity"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AuthLoginDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "dtos.CreateFolderDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateLinkDto": {
            "type": "object",
            "required": [
                "cover_url",
                "excerpt",
                "url"
            ],
            "properties": {
                "cover_url": {
                    "type": "string",
                    "format": "url"
                },
                "excerpt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "url"
                }
            }
        },
        "dtos.CreateUserDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "dtos.UpdateLinkDto": {
            "type": "object",
            "required": [
                "cover_url",
                "excerpt"
            ],
            "properties": {
                "cover_url": {
                    "type": "string",
                    "format": "url"
                },
                "excerpt": {
                    "type": "string",
                    "format": "url"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entities.FolderEntity": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "entities.LinkEntity": {
            "type": "object",
            "properties": {
                "cover_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "excerpt": {
                    "type": "string"
                },
                "folder_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "owner_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entities.UserEntity": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "utils.BaseResponse-any": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.BaseResponse-array_entities_UserEntity": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.UserEntity"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.BaseResponse-entities_FolderEntity": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entities.FolderEntity"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.BaseResponse-entities_LinkEntity": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entities.LinkEntity"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.BaseResponse-entities_UserEntity": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entities.UserEntity"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "utils.BaseResponse-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}